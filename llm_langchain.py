# -*- coding: utf-8 -*-
"""LLM - LangChain.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uZXwVIr_v0tbQY5BJc3UrZyObOGN67L2
"""

!pip install -q langchain
!pip install langchain-community
!pip install langchain-huggingface
!pip install langchainhub
!pip install langchain_chroma

!pip install -U bitsandbytes
!pip install -U transformers

import torch
import os
import getpass
from transformers import AutoTokenizer, pipeline, BitsAndBytesConfig, AutoModelForCausalLM
from langchain_huggingface import HuggingFacePipeline
from langchain.prompts import PromptTemplate
from langchain_core.prompts import (
    ChatPromptTemplate,
    HumanMessagePromptTemplate,
    MessagesPlaceholder

)
from langchain_core.messages import SystemMessage
from langchain_core.output_parsers import StrOutputParser
from langchain_core.runnables import RunnablePassthrough
from bitsandbytes import QuantizationConfig

model_id = "microsoft/Phi-3-mini-4k-instruct"

quantization_config = BitsAndBytesConfig(
    load_in_4bit=True,
    bnb_4bit_quant_type="nf4",
    bnb_4bit_use_double_quant=True,
    bnb_4bit_compute_dtype=torch.bfloat16
)

pip show bitsandbytes

model = AutoModelForCausalLM.from_pretrained(model_id, quantization_config=quantization_config)
tokenizer = AutoTokenizer.from_pretrained(model_id)

pipe = pipeline(
    model = model,
    tonekizer = tokenizer,
    task = "text-generation",
    temperature = 0.1,
    max_new_tokens = 500,
    do_sample = True,
    repition_penalty = 1.1,
    return_full_text = False
)

llm = HuggingFacePipeline(pipeline = pipe)

input = "XXX"

Output = llm.invoke(input)